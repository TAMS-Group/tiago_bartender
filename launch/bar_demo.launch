<?xml version="1.0"?>
<launch>
  <!-- launches our "Thiago" bar in rviz and Gazebo.
       As roslaunch does not support dependencies, you will have
       to launch your robot and any bottles/glasses/etc. after
       this launch has completed.
  -->

  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="0.01" />

  <!-- doesn't work anymore <arg name="world_name" default="$(find gazebo_ros)/worlds/empty.world" /> -->
  <arg name="world_name" default="worlds/empty.world" /> -->



  <!-- start gazebo server (gzserver/debug) and the main GUI-->
  <node name="gazebo" pkg="gazebo_ros" type="gzserver" respawn="false" output="screen"
        args="$(arg world_name)" />

  <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>



  <!-- spawn the bar counter at xzy=(0,0,0), guests approach from -x  -->
  <param name="bar_counter_description" 
         command="$(find xacro)/xacro.py $(find thiago_world)/urdf/bar_counter_description.xacro" />

  <node name="spawn_bar_counter" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param bar_counter_description  -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0 -model bar_counter" 
        respawn="false" output="screen" />



  <!-- spawn three bar stools in front of the counter -->
  <param name="bar_stool_description" 
         command="$(find xacro)/xacro.py $(find thiago_world)/urdf/bar_stool.xacro" />

  <node name="spawn_bar_stool_1" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param bar_stool_description  -x -0.9 -y -1.0 -z 0.001 -R 0 -P 0 -Y 0 -model bar_stool_1" 
        respawn="false" output="screen" />

  <node name="spawn_bar_stool_2" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param bar_stool_description  -x -0.9 -y 0.0 -z 0.001 -R 0 -P 0 -Y 0 -model bar_stool_2" 
        respawn="false" output="screen" />

  <node name="spawn_bar_stool_3" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param bar_stool_description  -x -0.9 -y +1.0 -z 0.001 -R 0 -P 0 -Y 0 -model bar_stool_3" 
        respawn="false" output="screen" />



  <!-- spawn the bar shelf/cupboard behind the bar counter -->
  <param name="bar_cupboard_description" 
         command="$(find xacro)/xacro.py $(find thiago_world)/urdf/bar_cupboard_description.xacro" />

  <node name="spawn_bar_cupboardcounter" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param bar_cupboard_description  -x 2.0 -y 0 -z 0 -R 0 -P 0 -Y 0 -model bar_cupboard" 
        respawn="false" output="screen" />


  <!-- publish world transform to tf -->
  <node pkg="tf" type="static_transform_publisher" 
        name="static_map_tf_publisher" args="0 0 0 0 0 0 world map 100" />


 <!-- we want static transforms published to /tf -->
  <node pkg="robot_state_publisher" type="state_publisher" respawn="false"
        name="static_robot_state_publisher">
     <param name="publish_frequency" type="double" value="100.0" />
     <param name="tf_prefix" type="string" value="" />
     <param name="robot_description" command="$(find xacro)/xacro.py $(find thiago_world)/urdf/bar_counter.xacro" />  
     <!-- <remap from="joint_states" to="bar_counter/joint_states" /> -->
 </node>


  <node name="rviz" pkg="rviz" type="rviz" respawn="false" output="screen"
        args="-d $(find thiago_world)/config/bar_demo.rviz" />

</launch>
